// Code generated by Fastpb v0.0.2. DO NOT EDIT.

package chatgpt

import (
	fmt "fmt"
	fastpb "github.com/cloudwego/fastpb"
)

var (
	_ = fmt.Errorf
	_ = fastpb.Skip
)

func (x *ChatRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
	switch number {
	case 1:
		offset, err = x.fastReadField1(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 2:
		offset, err = x.fastReadField2(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	default:
		offset, err = fastpb.Skip(buf, _type, number)
		if err != nil {
			goto SkipFieldError
		}
	}
	return offset, nil
SkipFieldError:
	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
ReadFieldError:
	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_ChatRequest[number], err)
}

func (x *ChatRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
	x.Model, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *ChatRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
	var v ChatMessage
	offset, err = fastpb.ReadMessage(buf, _type, &v)
	if err != nil {
		return offset, err
	}
	x.Messages = append(x.Messages, &v)
	return offset, nil
}

func (x *ChatMessage) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
	switch number {
	case 1:
		offset, err = x.fastReadField1(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 2:
		offset, err = x.fastReadField2(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	default:
		offset, err = fastpb.Skip(buf, _type, number)
		if err != nil {
			goto SkipFieldError
		}
	}
	return offset, nil
SkipFieldError:
	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
ReadFieldError:
	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_ChatMessage[number], err)
}

func (x *ChatMessage) fastReadField1(buf []byte, _type int8) (offset int, err error) {
	x.Role, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *ChatMessage) fastReadField2(buf []byte, _type int8) (offset int, err error) {
	x.Content, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *ChatResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
	switch number {
	case 1:
		offset, err = x.fastReadField1(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 2:
		offset, err = x.fastReadField2(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 3:
		offset, err = x.fastReadField3(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 4:
		offset, err = x.fastReadField4(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 5:
		offset, err = x.fastReadField5(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	default:
		offset, err = fastpb.Skip(buf, _type, number)
		if err != nil {
			goto SkipFieldError
		}
	}
	return offset, nil
SkipFieldError:
	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
ReadFieldError:
	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_ChatResponse[number], err)
}

func (x *ChatResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
	x.Id, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *ChatResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
	x.Object, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *ChatResponse) fastReadField3(buf []byte, _type int8) (offset int, err error) {
	x.Created, offset, err = fastpb.ReadInt64(buf, _type)
	return offset, err
}

func (x *ChatResponse) fastReadField4(buf []byte, _type int8) (offset int, err error) {
	var v ChatChoice
	offset, err = fastpb.ReadMessage(buf, _type, &v)
	if err != nil {
		return offset, err
	}
	x.Choices = append(x.Choices, &v)
	return offset, nil
}

func (x *ChatResponse) fastReadField5(buf []byte, _type int8) (offset int, err error) {
	var v Usage
	offset, err = fastpb.ReadMessage(buf, _type, &v)
	if err != nil {
		return offset, err
	}
	x.Usage = &v
	return offset, nil
}

func (x *ChatChoice) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
	switch number {
	case 1:
		offset, err = x.fastReadField1(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 2:
		offset, err = x.fastReadField2(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 3:
		offset, err = x.fastReadField3(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	default:
		offset, err = fastpb.Skip(buf, _type, number)
		if err != nil {
			goto SkipFieldError
		}
	}
	return offset, nil
SkipFieldError:
	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
ReadFieldError:
	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_ChatChoice[number], err)
}

func (x *ChatChoice) fastReadField1(buf []byte, _type int8) (offset int, err error) {
	x.Index, offset, err = fastpb.ReadInt32(buf, _type)
	return offset, err
}

func (x *ChatChoice) fastReadField2(buf []byte, _type int8) (offset int, err error) {
	var v ChatMessage
	offset, err = fastpb.ReadMessage(buf, _type, &v)
	if err != nil {
		return offset, err
	}
	x.Message = &v
	return offset, nil
}

func (x *ChatChoice) fastReadField3(buf []byte, _type int8) (offset int, err error) {
	x.FinishReason, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Usage) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
	switch number {
	case 1:
		offset, err = x.fastReadField1(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 2:
		offset, err = x.fastReadField2(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 3:
		offset, err = x.fastReadField3(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	default:
		offset, err = fastpb.Skip(buf, _type, number)
		if err != nil {
			goto SkipFieldError
		}
	}
	return offset, nil
SkipFieldError:
	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
ReadFieldError:
	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_Usage[number], err)
}

func (x *Usage) fastReadField1(buf []byte, _type int8) (offset int, err error) {
	x.PromptTokens, offset, err = fastpb.ReadInt32(buf, _type)
	return offset, err
}

func (x *Usage) fastReadField2(buf []byte, _type int8) (offset int, err error) {
	x.CompletionTokens, offset, err = fastpb.ReadInt32(buf, _type)
	return offset, err
}

func (x *Usage) fastReadField3(buf []byte, _type int8) (offset int, err error) {
	x.TotalTokens, offset, err = fastpb.ReadInt32(buf, _type)
	return offset, err
}

func (x *ChatRequest) FastWrite(buf []byte) (offset int) {
	if x == nil {
		return offset
	}
	offset += x.fastWriteField1(buf[offset:])
	offset += x.fastWriteField2(buf[offset:])
	return offset
}

func (x *ChatRequest) fastWriteField1(buf []byte) (offset int) {
	if x.Model == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 1, x.GetModel())
	return offset
}

func (x *ChatRequest) fastWriteField2(buf []byte) (offset int) {
	if x.Messages == nil {
		return offset
	}
	for i := range x.GetMessages() {
		offset += fastpb.WriteMessage(buf[offset:], 2, x.GetMessages()[i])
	}
	return offset
}

func (x *ChatMessage) FastWrite(buf []byte) (offset int) {
	if x == nil {
		return offset
	}
	offset += x.fastWriteField1(buf[offset:])
	offset += x.fastWriteField2(buf[offset:])
	return offset
}

func (x *ChatMessage) fastWriteField1(buf []byte) (offset int) {
	if x.Role == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 1, x.GetRole())
	return offset
}

func (x *ChatMessage) fastWriteField2(buf []byte) (offset int) {
	if x.Content == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 2, x.GetContent())
	return offset
}

func (x *ChatResponse) FastWrite(buf []byte) (offset int) {
	if x == nil {
		return offset
	}
	offset += x.fastWriteField1(buf[offset:])
	offset += x.fastWriteField2(buf[offset:])
	offset += x.fastWriteField3(buf[offset:])
	offset += x.fastWriteField4(buf[offset:])
	offset += x.fastWriteField5(buf[offset:])
	return offset
}

func (x *ChatResponse) fastWriteField1(buf []byte) (offset int) {
	if x.Id == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 1, x.GetId())
	return offset
}

func (x *ChatResponse) fastWriteField2(buf []byte) (offset int) {
	if x.Object == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 2, x.GetObject())
	return offset
}

func (x *ChatResponse) fastWriteField3(buf []byte) (offset int) {
	if x.Created == 0 {
		return offset
	}
	offset += fastpb.WriteInt64(buf[offset:], 3, x.GetCreated())
	return offset
}

func (x *ChatResponse) fastWriteField4(buf []byte) (offset int) {
	if x.Choices == nil {
		return offset
	}
	for i := range x.GetChoices() {
		offset += fastpb.WriteMessage(buf[offset:], 4, x.GetChoices()[i])
	}
	return offset
}

func (x *ChatResponse) fastWriteField5(buf []byte) (offset int) {
	if x.Usage == nil {
		return offset
	}
	offset += fastpb.WriteMessage(buf[offset:], 5, x.GetUsage())
	return offset
}

func (x *ChatChoice) FastWrite(buf []byte) (offset int) {
	if x == nil {
		return offset
	}
	offset += x.fastWriteField1(buf[offset:])
	offset += x.fastWriteField2(buf[offset:])
	offset += x.fastWriteField3(buf[offset:])
	return offset
}

func (x *ChatChoice) fastWriteField1(buf []byte) (offset int) {
	if x.Index == 0 {
		return offset
	}
	offset += fastpb.WriteInt32(buf[offset:], 1, x.GetIndex())
	return offset
}

func (x *ChatChoice) fastWriteField2(buf []byte) (offset int) {
	if x.Message == nil {
		return offset
	}
	offset += fastpb.WriteMessage(buf[offset:], 2, x.GetMessage())
	return offset
}

func (x *ChatChoice) fastWriteField3(buf []byte) (offset int) {
	if x.FinishReason == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 3, x.GetFinishReason())
	return offset
}

func (x *Usage) FastWrite(buf []byte) (offset int) {
	if x == nil {
		return offset
	}
	offset += x.fastWriteField1(buf[offset:])
	offset += x.fastWriteField2(buf[offset:])
	offset += x.fastWriteField3(buf[offset:])
	return offset
}

func (x *Usage) fastWriteField1(buf []byte) (offset int) {
	if x.PromptTokens == 0 {
		return offset
	}
	offset += fastpb.WriteInt32(buf[offset:], 1, x.GetPromptTokens())
	return offset
}

func (x *Usage) fastWriteField2(buf []byte) (offset int) {
	if x.CompletionTokens == 0 {
		return offset
	}
	offset += fastpb.WriteInt32(buf[offset:], 2, x.GetCompletionTokens())
	return offset
}

func (x *Usage) fastWriteField3(buf []byte) (offset int) {
	if x.TotalTokens == 0 {
		return offset
	}
	offset += fastpb.WriteInt32(buf[offset:], 3, x.GetTotalTokens())
	return offset
}

func (x *ChatRequest) Size() (n int) {
	if x == nil {
		return n
	}
	n += x.sizeField1()
	n += x.sizeField2()
	return n
}

func (x *ChatRequest) sizeField1() (n int) {
	if x.Model == "" {
		return n
	}
	n += fastpb.SizeString(1, x.GetModel())
	return n
}

func (x *ChatRequest) sizeField2() (n int) {
	if x.Messages == nil {
		return n
	}
	for i := range x.GetMessages() {
		n += fastpb.SizeMessage(2, x.GetMessages()[i])
	}
	return n
}

func (x *ChatMessage) Size() (n int) {
	if x == nil {
		return n
	}
	n += x.sizeField1()
	n += x.sizeField2()
	return n
}

func (x *ChatMessage) sizeField1() (n int) {
	if x.Role == "" {
		return n
	}
	n += fastpb.SizeString(1, x.GetRole())
	return n
}

func (x *ChatMessage) sizeField2() (n int) {
	if x.Content == "" {
		return n
	}
	n += fastpb.SizeString(2, x.GetContent())
	return n
}

func (x *ChatResponse) Size() (n int) {
	if x == nil {
		return n
	}
	n += x.sizeField1()
	n += x.sizeField2()
	n += x.sizeField3()
	n += x.sizeField4()
	n += x.sizeField5()
	return n
}

func (x *ChatResponse) sizeField1() (n int) {
	if x.Id == "" {
		return n
	}
	n += fastpb.SizeString(1, x.GetId())
	return n
}

func (x *ChatResponse) sizeField2() (n int) {
	if x.Object == "" {
		return n
	}
	n += fastpb.SizeString(2, x.GetObject())
	return n
}

func (x *ChatResponse) sizeField3() (n int) {
	if x.Created == 0 {
		return n
	}
	n += fastpb.SizeInt64(3, x.GetCreated())
	return n
}

func (x *ChatResponse) sizeField4() (n int) {
	if x.Choices == nil {
		return n
	}
	for i := range x.GetChoices() {
		n += fastpb.SizeMessage(4, x.GetChoices()[i])
	}
	return n
}

func (x *ChatResponse) sizeField5() (n int) {
	if x.Usage == nil {
		return n
	}
	n += fastpb.SizeMessage(5, x.GetUsage())
	return n
}

func (x *ChatChoice) Size() (n int) {
	if x == nil {
		return n
	}
	n += x.sizeField1()
	n += x.sizeField2()
	n += x.sizeField3()
	return n
}

func (x *ChatChoice) sizeField1() (n int) {
	if x.Index == 0 {
		return n
	}
	n += fastpb.SizeInt32(1, x.GetIndex())
	return n
}

func (x *ChatChoice) sizeField2() (n int) {
	if x.Message == nil {
		return n
	}
	n += fastpb.SizeMessage(2, x.GetMessage())
	return n
}

func (x *ChatChoice) sizeField3() (n int) {
	if x.FinishReason == "" {
		return n
	}
	n += fastpb.SizeString(3, x.GetFinishReason())
	return n
}

func (x *Usage) Size() (n int) {
	if x == nil {
		return n
	}
	n += x.sizeField1()
	n += x.sizeField2()
	n += x.sizeField3()
	return n
}

func (x *Usage) sizeField1() (n int) {
	if x.PromptTokens == 0 {
		return n
	}
	n += fastpb.SizeInt32(1, x.GetPromptTokens())
	return n
}

func (x *Usage) sizeField2() (n int) {
	if x.CompletionTokens == 0 {
		return n
	}
	n += fastpb.SizeInt32(2, x.GetCompletionTokens())
	return n
}

func (x *Usage) sizeField3() (n int) {
	if x.TotalTokens == 0 {
		return n
	}
	n += fastpb.SizeInt32(3, x.GetTotalTokens())
	return n
}

var fieldIDToName_ChatRequest = map[int32]string{
	1: "Model",
	2: "Messages",
}

var fieldIDToName_ChatMessage = map[int32]string{
	1: "Role",
	2: "Content",
}

var fieldIDToName_ChatResponse = map[int32]string{
	1: "Id",
	2: "Object",
	3: "Created",
	4: "Choices",
	5: "Usage",
}

var fieldIDToName_ChatChoice = map[int32]string{
	1: "Index",
	2: "Message",
	3: "FinishReason",
}

var fieldIDToName_Usage = map[int32]string{
	1: "PromptTokens",
	2: "CompletionTokens",
	3: "TotalTokens",
}
